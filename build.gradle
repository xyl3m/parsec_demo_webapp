apply from: 'https://raw.githubusercontent.com/yahoo/parsec/master/parsec-base-build/src/main/resources/parsec.gradle'

group = 'com.xyl3m.demo.parsec'

buildscript {
    //additional buildscript components
}

repositories {
    mavenCentral()
}

dependencies {
    compile group: 'com.google.code.gson', name: 'gson', version: '2.8.6'
    compile group: 'com.google.inject', name: 'guice', version: '4.2.2'
    compile group: 'com.google.guava', name: 'guava', version: '28.2-jre'

    // utility
    compile group: 'org.apache.commons', name: 'commons-collections4', version: '4.4'
    compile group: 'org.apache.commons', name: 'commons-lang3', version: '3.9'
    compile group: 'org.apache.httpcomponents', name: 'httpclient', version: '4.5.11'
    compile group: 'com.github.l0n9h02n', name: 'fastball', version: '1.1.1'

    // database
    compile group: 'org.mybatis', name: 'mybatis', version: '3.5.4'
    compile group: 'org.mybatis', name: 'mybatis-guice', version: '3.11'
    compile group: 'com.zaxxer', name: 'HikariCP', version: '3.4.2'
    compile group: 'org.postgresql', name: 'postgresql', version: '42.2.10'

    // logging
    compile group: 'org.apache.logging.log4j', name: 'log4j-slf4j18-impl', version: '2.13.0'
    compile group: 'org.slf4j', name: 'slf4j-api', version: '2.0.0-alpha1'

    // unit test
    testCompile group: 'com.google.truth', name: 'truth', version: '1.0.1'
    testCompile group: 'org.mockito', name: 'mockito-core', version: '3.3.0'
    testCompile group: 'org.mockito', name: 'mockito-all', version: '1.10.19'
    testCompile group: 'org.powermock', name: 'powermock-module-junit4', version: '2.0.5'
    testCompile group: 'org.powermock', name: 'powermock-api-mockito2', version: '2.0.5'
    testCompile group: 'org.testcontainers', name: 'junit-jupiter', version: '1.12.5'
    testCompile group: 'org.testcontainers', name: 'postgresql', version: '1.12.5'

    // functional test
    testImplementation group: 'io.cucumber', name: 'cucumber-java', version: '5.1.3'
    testImplementation group: 'io.cucumber', name: 'cucumber-junit', version: '5.1.3'
    testImplementation group: 'io.cucumber', name: 'cucumber-picocontainer', version: '5.1.3'
}

configurations {
    cucumberRuntime {
        extendsFrom testImplementation
    }
}

mainClassName = 'DefaultApplication'

war {
    archiveFileName = 'api.war'
}

test {
    jvmArgs = ['-Dparsec.conf.env.context=local.conf']
    failFast = true
    include 'com/xyl3m/**'
}

checkstyle {
    toolVersion = "8.29"
    showViolations = true
    checkstyleMain.ignoreFailures = false
}

findbugs {
    findbugsMain.ignoreFailures = false
}

pmd {
    pmdMain.ignoreFailures = false
}

gretty {
    jvmArgs = ['-Dparsec.conf.env.context=local.conf']
}

jacocoTestReport {
    afterEvaluate {
        getClassDirectories().setFrom(files(classDirectories.files.collect {
            fileTree(dir: it, exclude: [
                    'com/xyl3m/demo/parsec/parsec_generated/**'
            ])
        }))
    }
}

task cucumber() {
    dependsOn assemble, compileTestJava
    doLast {
        javaexec {
            main = "io.cucumber.core.cli.Main"
            classpath = configurations.cucumberRuntime + sourceSets.main.output + sourceSets.test.output
            args += ['--plugin', 'pretty', '--glue', 'integration', 'src/test/resources/feature']
            systemProperties = System.getProperties()
        }
    }
}
